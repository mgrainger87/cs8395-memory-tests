{
    "problem_identifier": "unique_paths",
    "model_identifier": "chatgpt-latest",
    "prompt_identifier": "28",
    "solution_code": "To solve this problem, we can use dynamic programming. \n\nWe can create a 2D array dp[m][n] and initialize all the elements to 1. \n\nThen, for each cell dp[i][j], we can calculate the number of unique paths to reach that cell by adding the number of paths from the cell above dp[i-1][j] and the cell to the left dp[i][j-1]. \n\nFinally, the value of dp[m-1][n-1] will be the number of unique paths to reach the bottom-right corner of the grid.\n\nHere is the Python code for this solution:\n\ndef unique_paths(m: int, n: int) -> int:\n    # Create a dp array\n    dp = [[1] * n] * m\n\n    # Calculate the number of unique paths for each cell\n    for i in range(1, m):\n        for j in range(1, n):\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\n\n    # Return the number of unique paths to reach the bottom-right corner\n    return dp[m-1][n-1]",
    "feedback": null
}
{
    "problem_identifier": "max_subarray_difference",
    "model_identifier": "chatgpt-latest",
    "prompt_identifier": "32",
    "solution_code": "from typing import List\n\ndef max_subarray_diff(nums: List[int]) -> int:\n    n = len(nums)\n    left_max = [0] * n\n    right_max = [0] * n\n    \n    left_max[0] = nums[0]\n    max_left_sum = nums[0]\n    for i in range(1, n):\n        left_max[i] = max(nums[i], nums[i] + left_max[i-1])\n        max_left_sum = max(max_left_sum, left_max[i])\n    \n    right_max[n-1] = nums[n-1]\n    for i in range(n-2, -1, -1):\n        right_max[i] = max(nums[i], nums[i] + right_max[i+1])\n    \n    max_diff = float('-inf')\n    for i in range(n-1):\n        diff = abs(max_left_sum - right_max[i+1])\n        max_diff = max(max_diff, diff)\n    \n    return max_diff",
    "feedback": null
}
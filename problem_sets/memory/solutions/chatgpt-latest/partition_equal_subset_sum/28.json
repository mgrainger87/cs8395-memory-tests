{
    "problem_identifier": "partition_equal_subset_sum",
    "model_identifier": "chatgpt-latest",
    "prompt_identifier": "28",
    "solution_code": "from typing import List\n\ndef can_partition(nums: List[int]) -> bool:\n    total_sum = sum(nums)\n    if total_sum % 2 != 0:\n        return False\n    \n    target = total_sum // 2\n    n = len(nums)\n    dp = [[False] * (target+1) for _ in range(n+1)]\n    \n    for i in range(n+1):\n        dp[i][0] = True\n    \n    for i in range(1, n+1):\n        for j in range(1, target+1):\n            dp[i][j] = dp[i-1][j]\n            if j >= nums[i-1]:\n                dp[i][j] |= dp[i-1][j-nums[i-1]]\n    \n    return dp[n][target]",
    "feedback": null
}